<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbFormLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>